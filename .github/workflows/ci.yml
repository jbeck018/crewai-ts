name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch: # Allow manual triggering

jobs:
  validate:
    name: Validate TypeScript
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [21.1.0]
      # Apply fail-fast optimization to minimize wasted CI time
      fail-fast: true
    
    steps:
      - uses: actions/checkout@v3
        with:
          # Optimize checkout by getting minimal amount of history
          fetch-depth: 1
      
      - name: Set up Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
          # Enable module caching for faster builds
          cache: true
      
      - name: Install dependencies
        # Use fast bun installation
        run: bun install --frozen-lockfile
      
      - name: Type check
        # Optimize TypeScript checking to make it more resource-efficient
        run: bun run type-check

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    # Optimize with memory-efficient containerization
    container:
      image: node:18
      options: --memory=4g --cpus=2
    
    strategy:
      matrix:
        node-version: [21.1.0]
      # Apply fail-fast optimization for test runs
      fail-fast: true
    
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
      
      - name: Set up Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
          cache: true
      
      - name: Install dependencies
        # Use fast bun installation
        run: bun install --frozen-lockfile
      
      - name: Build project
        # Optimize TypeScript compilation for CI environment
        run: bun run build
      
      - name: Run tests
        # Optimize test runs with memory settings for embeddings tests
        run: bun run test
        # Set environment variables to use mock embeddings in tests for better performance
        env:
          TEST_USE_MOCK_EMBEDDINGS: true
          TEST_SKIP_EXTERNAL_API: true
      
      - name: Upload test coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage/
          # Optimize artifact storage with compression
          retention-days: 7

  # Memory-optimized build verification job
  build:
    name: Verify Build
    runs-on: ubuntu-latest
    needs: [validate, test]
    
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
      
      - name: Set up Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
          cache: true
      
      - name: Install dependencies
        run: bun install --frozen-lockfile
      
      - name: Build package
        # Build with optimizations enabled
        run: bun run build
      
      - name: Verify package size
        # Check bundle size to ensure memory-efficient distribution
        run: |
          bun run build:analyze
          bunx bundlesize
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 7
